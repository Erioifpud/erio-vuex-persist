{"version":3,"file":"index.js","sources":["../../src/utils.js","../../src/index.js"],"sourcesContent":["/**\n * 使用持久化形式的 pathKeyState 覆盖 Vuex 的根状态对象 rootState 与合并，结果为 Vuex 的根状态对象的形式\n * 根状态对象 rootState 中不存在的属性不会被覆盖\n * @param {Object} rootState Vuex 根状态对象\n * @param {Object} pathKeyState 以属性路径作为键的对象，如 { 'a.b.c': 1, 'a.b.d': 2 }\n */\nexport const cover = (rootState, pathKeyState) => {\n  const copiedRootState = JSON.parse(JSON.stringify(rootState))\n  for (const path in pathKeyState) {\n    const value = pathKeyState[path]\n    setNestedItem(copiedRootState, path, value)\n  }\n  return copiedRootState\n}\n\n/**\n * 判断 obj 是否**不为对象**\n * @param {any} obj 任意形式的数据\n */\nexport const isNotObject = (obj) => obj === null || typeof obj !== 'object'\n\n/**\n * 通过属性路径 path 在上下文 ctx 中取得对应的值\n * @param {Object} ctx 需要通获取属性值的上下文\n * @param {String} path 属性在上下文 ctx 中的路径，形如 'a.b.c'\n */\nexport const getNestedItem = (ctx, path) => {\n  if (isNotObject(ctx)) {\n    return\n  }\n  if (typeof path !== 'string') {\n    return\n  }\n  const keys = path.split('.')\n  for (const key of keys) {\n    if (key in ctx) {\n      ctx = ctx[key]\n      continue\n    }\n    return\n  }\n  return {\n    value: ctx\n  }\n}\n\n/**\n * 在上下文 ctx 中通过路径 path 将对应属性赋值为 value\n * @param {Object} ctx 需要设置属性值的上下文\n * @param {String} path 属性在上下文中的路径，形如 'a.b.c'\n * @param {any} value 需要设置的属性的值\n */\nexport const setNestedItem = (ctx, path, value) => {\n  if (isNotObject(ctx)) {\n    return\n  }\n  const keys = path.split('.')\n  const last = keys.pop()\n  if (!last) {\n    return\n  }\n  for (const key of keys) {\n    if (isNotObject(ctx[key])) {\n      return\n    }\n    ctx = ctx[key]\n  }\n  ctx[last] = value\n}\n\n/**\n * [已弃用] 将持久化形式的 pathKeyState 转换为 Vuex 的根状态对象形式\n * @param {Object} pathKeyState 以属性路径作为键的对象，如 { 'a.b.c': 1, 'a.b.d': 2 }\n */\n// export const toState = (pathKeyState) => {\n//   if (isNotObject(pathKeyState)) {\n//     return\n//   }\n//   let state = {}\n//   for (let path in pathKeyState) {\n//     const value = pathKeyState[path]\n//     const keys = path.split('.')\n//     const last = keys.pop()\n//     let pointer = state\n//     for (const key of keys) {\n//       if (!pointer[key]) {\n//         pointer[key] = {}\n//       }\n//       pointer = pointer[key]\n//     }\n//     pointer[last] = value\n//   }\n//   return state\n// }\n","import { cover, getNestedItem } from './utils'\n\nexport default class ErioVuexPersist {\n  constructor (options) {\n    // 储存使用的容器\n    this.storage = options.storage || window.localStorage\n    // 状态储存规则\n    this.rule = options.rule\n    // 状态在容器中使用的键\n    this.storageKey = options.storageKey || 'erio-vuex-persist'\n    // 严格模式（能获得状态恢复完成的标志）\n    this.strict = options.strict\n    // 状态恢复函数\n    this.restoreState = options.restoreState ? options.restoreState : (key, storage) => {\n      const value = storage.getItem(key)\n      if (typeof value === 'string') {\n        return JSON.parse(value || {})\n      }\n      return value || {}\n    }\n    // 状态储存函数\n    this.saveState = options.saveState ? options.saveState : (key, state, storage) => {\n      storage.setItem(key, JSON.stringify(state))\n    }\n\n    // Vuex 使用的插件\n    this.plugin = (store) => {\n      // 从 storage 中取出数据恢复至 Vuex\n      const prevState = this.restoreState(this.storageKey, this.storage)\n      if (this.strict) {\n        store.commit('RESTORE_MUTATION', prevState)\n      } else {\n        store.replaceState(cover(store.state, prevState))\n      }\n      let miniStore = prevState || {}\n\n      // 根据 rule 在每一次 mutation 后将需要的状态同步至 storage\n      store.subscribe((mutation, state) => {\n        const { type } = mutation\n        if (!(type in this.rule)) {\n          return\n        }\n        const paths = this.rule[type]\n        const tempStore = paths.reduce((a, b) => {\n          const item = getNestedItem(state, b)\n          if (item) {\n            a[b] = item.value\n          }\n          return a\n        }, {})\n\n        miniStore = {\n          ...miniStore,\n          ...tempStore\n        }\n        this.saveState(this.storageKey, miniStore, this.storage)\n      })\n    }\n\n    /**\n     * from: https://github.com/championswimmer/vuex-persist/blob/master/src/index.ts\n     * 通过 Mutation 的形式恢复状态\n     * @param {Object} state Vuex 根状态对象\n     * @param {Object} savedState 要恢复的局部状态\n     */\n    this.RESTORE_MUTATION = (state, savedState) => {\n      const coverdState = cover(state, savedState || {})\n      for (const propertyName of Object.keys(coverdState)) {\n        this._vm.$set(state, propertyName, coverdState[propertyName])\n      }\n    }\n  }\n}\n"],"names":["cover","rootState","pathKeyState","copiedRootState","JSON","parse","stringify","path","value","setNestedItem","isNotObject","obj","getNestedItem","ctx","keys","split","key","last","pop","ErioVuexPersist","options","storage","window","localStorage","rule","storageKey","strict","restoreState","getItem","saveState","state","setItem","plugin","store","prevState","commit","replaceState","miniStore","subscribe","mutation","type","paths","tempStore","reduce","a","b","item","RESTORE_MUTATION","savedState","coverdState","Object","propertyName","_vm","$set"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;;;;;;AAMA,EAAO,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAACC,SAAD,EAAYC,YAAZ,EAA6B;EAChD,MAAMC,eAAe,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeL,SAAf,CAAX,CAAxB;;EACA,OAAK,IAAMM,IAAX,IAAmBL,YAAnB,EAAiC;EAC/B,QAAMM,KAAK,GAAGN,YAAY,CAACK,IAAD,CAA1B;EACAE,IAAAA,aAAa,CAACN,eAAD,EAAkBI,IAAlB,EAAwBC,KAAxB,CAAb;EACD;;EACD,SAAOL,eAAP;EACD,CAPM;EASP;;;;;AAIA,EAAO,IAAMO,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD;EAAA,SAASA,GAAG,KAAK,IAAR,IAAgB,QAAOA,GAAP,MAAe,QAAxC;EAAA,CAApB;EAEP;;;;;;AAKA,EAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAMN,IAAN,EAAe;EAC1C,MAAIG,WAAW,CAACG,GAAD,CAAf,EAAsB;EACpB;EACD;;EACD,MAAI,OAAON,IAAP,KAAgB,QAApB,EAA8B;EAC5B;EACD;;EACD,MAAMO,IAAI,GAAGP,IAAI,CAACQ,KAAL,CAAW,GAAX,CAAb;EAP0C;EAAA;EAAA;;EAAA;EAQ1C,yBAAkBD,IAAlB,8HAAwB;EAAA,UAAbE,GAAa;;EACtB,UAAIA,GAAG,IAAIH,GAAX,EAAgB;EACdA,QAAAA,GAAG,GAAGA,GAAG,CAACG,GAAD,CAAT;EACA;EACD;;EACD;EACD;EAdyC;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;;EAe1C,SAAO;EACLR,IAAAA,KAAK,EAAEK;EADF,GAAP;EAGD,CAlBM;EAoBP;;;;;;;AAMA,EAAO,IAAMJ,aAAa,GAAG,SAAhBA,aAAgB,CAACI,GAAD,EAAMN,IAAN,EAAYC,KAAZ,EAAsB;EACjD,MAAIE,WAAW,CAACG,GAAD,CAAf,EAAsB;EACpB;EACD;;EACD,MAAMC,IAAI,GAAGP,IAAI,CAACQ,KAAL,CAAW,GAAX,CAAb;EACA,MAAME,IAAI,GAAGH,IAAI,CAACI,GAAL,EAAb;;EACA,MAAI,CAACD,IAAL,EAAW;EACT;EACD;;EARgD;EAAA;EAAA;;EAAA;EASjD,0BAAkBH,IAAlB,mIAAwB;EAAA,UAAbE,GAAa;;EACtB,UAAIN,WAAW,CAACG,GAAG,CAACG,GAAD,CAAJ,CAAf,EAA2B;EACzB;EACD;;EACDH,MAAAA,GAAG,GAAGA,GAAG,CAACG,GAAD,CAAT;EACD;EAdgD;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;;EAejDH,EAAAA,GAAG,CAACI,IAAD,CAAH,GAAYT,KAAZ;EACD,CAhBM;EAkBP;;;;EAIA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;MC3FqBW,kBACnB,yBAAaC,OAAb,EAAsB;EAAA;;EAAA;;EACpB;EACA,OAAKC,OAAL,GAAeD,OAAO,CAACC,OAAR,IAAmBC,MAAM,CAACC,YAAzC,CAFoB;;EAIpB,OAAKC,IAAL,GAAYJ,OAAO,CAACI,IAApB,CAJoB;;EAMpB,OAAKC,UAAL,GAAkBL,OAAO,CAACK,UAAR,IAAsB,mBAAxC,CANoB;;EAQpB,OAAKC,MAAL,GAAcN,OAAO,CAACM,MAAtB,CARoB;;EAUpB,OAAKC,YAAL,GAAoBP,OAAO,CAACO,YAAR,GAAuBP,OAAO,CAACO,YAA/B,GAA8C,UAACX,GAAD,EAAMK,OAAN,EAAkB;EAClF,QAAMb,KAAK,GAAGa,OAAO,CAACO,OAAR,CAAgBZ,GAAhB,CAAd;;EACA,QAAI,OAAOR,KAAP,KAAiB,QAArB,EAA+B;EAC7B,aAAOJ,IAAI,CAACC,KAAL,CAAWG,KAAK,IAAI,EAApB,CAAP;EACD;;EACD,WAAOA,KAAK,IAAI,EAAhB;EACD,GAND,CAVoB;;EAkBpB,OAAKqB,SAAL,GAAiBT,OAAO,CAACS,SAAR,GAAoBT,OAAO,CAACS,SAA5B,GAAwC,UAACb,GAAD,EAAMc,KAAN,EAAaT,OAAb,EAAyB;EAChFA,IAAAA,OAAO,CAACU,OAAR,CAAgBf,GAAhB,EAAqBZ,IAAI,CAACE,SAAL,CAAewB,KAAf,CAArB;EACD,GAFD,CAlBoB;;EAuBpB,OAAKE,MAAL,GAAc,UAACC,KAAD,EAAW;EACvB;EACA,QAAMC,SAAS,GAAG,KAAI,CAACP,YAAL,CAAkB,KAAI,CAACF,UAAvB,EAAmC,KAAI,CAACJ,OAAxC,CAAlB;;EACA,QAAI,KAAI,CAACK,MAAT,EAAiB;EACfO,MAAAA,KAAK,CAACE,MAAN,CAAa,kBAAb,EAAiCD,SAAjC;EACD,KAFD,MAEO;EACLD,MAAAA,KAAK,CAACG,YAAN,CAAmBpC,KAAK,CAACiC,KAAK,CAACH,KAAP,EAAcI,SAAd,CAAxB;EACD;;EACD,QAAIG,SAAS,GAAGH,SAAS,IAAI,EAA7B,CARuB;;EAWvBD,IAAAA,KAAK,CAACK,SAAN,CAAgB,UAACC,QAAD,EAAWT,KAAX,EAAqB;EAAA,UAC3BU,IAD2B,GAClBD,QADkB,CAC3BC,IAD2B;;EAEnC,UAAI,EAAEA,IAAI,IAAI,KAAI,CAAChB,IAAf,CAAJ,EAA0B;EACxB;EACD;;EACD,UAAMiB,KAAK,GAAG,KAAI,CAACjB,IAAL,CAAUgB,IAAV,CAAd;EACA,UAAME,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAa,UAACC,CAAD,EAAIC,CAAJ,EAAU;EACvC,YAAMC,IAAI,GAAGlC,aAAa,CAACkB,KAAD,EAAQe,CAAR,CAA1B;;EACA,YAAIC,IAAJ,EAAU;EACRF,UAAAA,CAAC,CAACC,CAAD,CAAD,GAAOC,IAAI,CAACtC,KAAZ;EACD;;EACD,eAAOoC,CAAP;EACD,OANiB,EAMf,EANe,CAAlB;EAQAP,MAAAA,SAAS,sBACJA,SADI,MAEJK,SAFI,CAAT;;EAIA,MAAA,KAAI,CAACb,SAAL,CAAe,KAAI,CAACJ,UAApB,EAAgCY,SAAhC,EAA2C,KAAI,CAAChB,OAAhD;EACD,KAnBD;EAoBD,GA/BD;EAiCA;;;;;;;;EAMA,OAAK0B,gBAAL,GAAwB,UAACjB,KAAD,EAAQkB,UAAR,EAAuB;EAC7C,QAAMC,WAAW,GAAGjD,KAAK,CAAC8B,KAAD,EAAQkB,UAAU,IAAI,EAAtB,CAAzB;;EACA,oCAA2BE,MAAM,CAACpC,IAAP,CAAYmC,WAAZ,CAA3B,kCAAqD;EAAhD,UAAME,YAAY,mBAAlB;;EACH,MAAA,KAAI,CAACC,GAAL,CAASC,IAAT,CAAcvB,KAAd,EAAqBqB,YAArB,EAAmCF,WAAW,CAACE,YAAD,CAA9C;EACD;EACF,GALD;EAMD;;;;;;;;;;;;"}